apply plugin: 'com.android.library'
apply from: 'maven-push.gradle'
//apply plugin: 'com.github.dcendents.android-maven'
/*apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'digital.wup.android-maven-publish'*/

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "0.3.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
}

/*task androidJavadocsJar(type: Jar) {
    classifier = 'javadoc'
    //basename = artifact_id
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    //basename = artifact_id
    from android.sourceSets.main.java.sourceFiles
}*/

/*publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.android

            *//*artifact androidSourcesJar
            artifact androidJavadocsJar*//*

            groupId 'com.hypernovalabs'
            artifactId 'multichoiceform'
            version '0.0.1'

            pom.withXml {
                // Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['MyPublication']
    publish = true //[Default: false] Whether version should be auto published after an upload
    override = true //[Default: false] Whether to override version artifacts already published
    // jFrog plugin must be declared for this line to work
    configurations = ['archives']
    // Package info for BinTray
    pkg {
        repo = 'maven'
        name = 'multichoiceform'
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/lcabrales/multichoiceform'
        version {
            name = '0.0.1'
            desc = 'MultiChoiceForm Library'
            released = new Date()
            vcsTag = '0.0.1'
        }
    }
}*/
